# .github/workflows/deploy.yml

# 工作流名称
name: Deploy to GitHub Pages

# 触发工作流的事件
on:
  # 在推送到 main 分支时触发
  push:
    branches:
      - main
  # 允许手动触发
  workflow_dispatch:

# 工作流权限设置
permissions:
  contents: read
  pages: write
  id-token: write

# 作业（Jobs）
jobs:
  # 定义一个名为 'deploy' 的作业
  deploy:
    # 设置作业在 GitHub Pages 环境中运行
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 指定运行器（Runner）类型
    runs-on: ubuntu-latest

    # 作业步骤（Steps）
    steps:
      # 步骤 1: 检出仓库代码
      - name: Checkout
        uses: actions/checkout@v4

      # 步骤 2: 设置 pnpm 包管理器
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 # 您可以根据 pnpm-lock.yaml 的版本进行调整

      # 步骤 3: 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 推荐使用 LTS 版本的 Node.js
          cache: "pnpm" # 使用 pnpm 的缓存

      # 步骤 4: 安装项目依赖
      - name: Install dependencies
        run: pnpm install

      # 步骤 5: 构建项目
      - name: Build
        run: pnpm build # 这会执行 package.json 中定义的 "astro build" 命令

      # 步骤 6: 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 步骤 7: 上传构建产物以供部署
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 从 'dist' 目录上传
          path: "./dist"

      # 步骤 8: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4